{"version":3,"file":"static/js/544.a3a7bbf6.chunk.js","mappings":"gNAGaA,EAAOC,EAAAA,GAAAA,GAAH,4LAQJC,EAAYD,EAAAA,GAAAA,GAAH,0YAeTE,GAAaF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,kQAaVI,EAASJ,EAAAA,GAAAA,IAAH,uI,mBCZnB,EAvBmB,SAAC,GAAgB,IAAdK,EAAa,EAAbA,OACZC,GAAWC,EAAAA,EAAAA,MACjB,OACQ,SAACR,EAAD,UACKM,EAAOG,OAAS,GAAKH,EAAOI,KAAI,SAAAC,GAC7B,OAAO,SAACT,EAAD,WACH,UAACC,EAAD,CAAYS,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAACC,KAAKR,GAApD,WACI,SAACF,EAAD,CAAQW,IAA2B,OAAtBL,EAAMM,YACb,qEADO,0CAE4BN,EAAMM,aAC3CC,IAAKP,EAAMQ,SACf,gCAAQR,EAAMQ,aANCR,EAAME,GAShC,KAGhB,C,4FClBYO,EAAoBnB,EAAAA,GAAAA,IAAH,sEAKjBoB,GAAkBpB,EAAAA,EAAAA,IAAOqB,EAAAA,EAAPrB,CAAH,uE,SCU5B,EAhBmB,SAAC,GAAsC,IAApCsB,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,YAElC,OACI,SAACL,EAAD,WACI,SAACC,EAAD,CACIK,MAAOD,EACPE,KAAK,QACLJ,KAAMA,EACNK,QAAQ,WACRC,MAAM,UACNL,SAAUA,KAIzB,C,8ICTKM,EAAW,gBA+DjB,UA7Da,WACT,OAAwBC,EAAAA,EAAAA,UAAS,GAAjC,eAAOR,EAAP,KAAaS,EAAb,KACA,GAAsCD,EAAAA,EAAAA,UAAS,GAA/C,eAAON,EAAP,KAAoBQ,EAApB,KACA,GAAoDF,EAAAA,EAAAA,WAAS,GAA7D,eAAOG,EAAP,KAA2BC,EAA3B,KACA,GAAsCJ,EAAAA,EAAAA,UAAS,IAA/C,eAAOK,EAAP,KAAoBC,EAApB,KACA,GAA0CN,EAAAA,EAAAA,WAAS,GAAnD,eAAOO,EAAP,KAAsBC,EAAtB,KACA,GAA0BR,EAAAA,EAAAA,WAAS,GAAnC,eAAOZ,EAAP,KAAcqB,EAAd,KACAC,QAAQC,IAAIN,IAGZO,EAAAA,EAAAA,YAAU,WAAM,wCACZ,8GAE+BC,EAAAA,EAAAA,IAAerB,GAF9C,UAEcsB,EAFd,OAGQR,GAAe,yBAAUQ,EAASC,QAAnB,IACfb,EAAeY,EAASpB,aAEX,IAATF,GACJwB,EAAAA,GAAAA,QAAA,iCAAwCF,EAASG,eAC/C,CAAEC,QAASnB,EAAUoB,SAAU,aAEN,IAAvBd,EAAY3B,OAVxB,yCAWmB8B,GAAiB,IAXpC,OAaqC,IAAzBM,EAASpB,aACTU,GAAsB,GAEG,IAAzBU,EAASpB,aACTU,GAAsB,GAjBlC,kDAoBQM,QAAQU,MAAR,MACKb,IACDS,EAAAA,GAAAA,MAAY,yBACH,CAAEE,QAASnB,IACpBU,GAAS,IAxBrB,2DADY,uBAAC,WAAD,wBA6BZY,EAEH,GAAC,CAAC7B,EAAME,EAAaW,EAAY3B,OAAQ6B,IAI1C,IAAMe,EAAe,SAACC,EAAGC,GACrBvB,EAAQuB,EACX,EAED,OACI,gCACKrB,IAAsB,SAAC,IAAD,CAAYX,KAAMA,EAAME,YAAaA,EAAaD,SAAU6B,KACnF,SAAC,IAAD,CAAY/C,OAAQ8B,IACnBF,IAAsB,SAAC,IAAD,CAAYX,KAAMA,EAAME,YAAaA,EAAaD,SAAU6B,KACnF,SAAC,EAAAG,SAAD,UACCrC,IAAS,eAAIsC,MAAO,CAAEC,UAAW,UAAxB,wCAIrB,C,mMClEKC,EAAW,gCACXC,EAAU,mCACVC,EAAc,QAEPjB,EAAc,mCAAG,yGAAOrB,EAAP,+BAAc,EAAd,kBAEHuC,EAAAA,EAAAA,IAAA,UAChBH,EADgB,sBACc,CAC7BI,OAAQ,CACNC,QAASJ,EACTK,SAAUJ,EACVtC,KAAMA,KAPU,cAEpBsB,EAFoB,OAU1BJ,QAAQC,IAAIG,GAVc,kBAWnBA,EAASqB,MAXU,sCAapB,IAAIC,MAAM,KAAIC,SAbM,yDAAH,qDAiBdC,EAAe,mCAAG,WAAMxD,GAAN,gGAEJiD,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA8B9C,GAAM,CACzDkD,OAAQ,CACNC,QAASJ,EACTK,SAAUJ,KALa,cAErBhB,EAFqB,yBAQpBA,EAASqB,MARW,sCAUrB,IAAIC,MAAM,KAAIC,SAVO,yDAAH,sDAcfE,EAAe,mCAAG,WAAMzD,GAAN,gGAEJiD,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA8B9C,EAA9B,YAA4C,CACjEkD,OAAQ,CACNC,QAASJ,EACTK,SAAUJ,KALa,cAErBhB,EAFqB,yBAQpBA,EAASqB,KAAKK,MARM,sCAUrB,IAAIJ,MAAM,KAAIC,SAVO,yDAAH,sDAcfI,EAAe,mCAAG,WAAM3D,GAAN,gGAEJiD,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA8B9C,EAA9B,YAA4C,CACjEkD,OAAQ,CACNC,QAASJ,EACTK,SAAUJ,KALa,cAErBhB,EAFqB,yBAQpBA,EAASqB,KAAKpB,SARM,sCAUrB,IAAIqB,MAAM,KAAIC,SAVO,yDAAH,sDAcfK,EAAc,mCAAG,WAAOC,GAAP,4FAAcnD,EAAd,+BAAqB,EAArB,kBAEHuC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,gBAAqC,CAC1DI,OAAQ,CACNC,QAASJ,EACTK,SAAUJ,EACVa,MAAOA,EACPnD,KAAMA,KAPgB,cAEpBsB,EAFoB,OAU1BJ,QAAQC,IAAIG,EAASqB,MAVK,kBAWnBrB,EAASqB,MAXU,sCAapB,IAAIC,MAAM,KAAIC,SAbM,yDAAH,qD","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/Pagination/Pagination.styled.jsx","components/Pagination/Pagination.jsx","pages/Home/Home.jsx","services/movieApi.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\"\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 280px);\n  justify-content: center;\n  gap: 20px;\n  padding: 20px 0;\n  /* background-color: #fff; */\n`\nexport const MovieItem = styled.li`\n    margin: 0 auto;\n    border: 1px solid lightgray;\n    width: 280px;\n  border-radius: 13px;\n  transition: box-shadow 250ms ease-in-out, border 150ms ease-in-out,transform 250ms ease-in-out ;\n  :hover{\n    box-shadow: 0px 2px 8px 0px rgba(0, 0, 0, 0.6);\n    transform: scale(1.05);\n  }\n    > a {\n        text-overflow: clip;\n    text-decoration: none;\n  }\n`\nexport const StyledLink = styled(Link)`\n    object-fit: cover;\n    overflow: hidden;\n    width: 280px;  \n    display: flex;\n    flex-direction:column;\n    border-radius: 13px;\n    color:black;\n    > span {\n    padding-left: 10px;\n    padding-bottom: 3px;\n  }    \n`\nexport const Poster = styled.img`\n    width: 280px;\n    height: 420px;\n    margin-bottom:10px;\n    object-fit: cover;\n    overflow: hidden;\n`\n","import PropTypes from 'prop-types';\nimport { List, Poster, StyledLink, MovieItem } from \"./MoviesList.styled\"\nimport {useLocation } from 'react-router-dom';\n\nconst MoviesList = ({ Movies }) => {\n    const location = useLocation();\n    return (\n            <List>\n                {Movies.length > 0 && Movies.map(movie => {\n                    return <MovieItem key={movie.id}>\n                        <StyledLink to={`/movies/${movie.id}`} state={{from:location}}>\n                            <Poster src={movie.poster_path === null\n                                ? 'https://dummyimage.com/400x600/7d7d7d/fff.jpg&text=image+not+found'\n                                : `https://image.tmdb.org/t/p/w400/${movie.poster_path}`}\n                                alt={movie.title} />\n                            <span> {movie.title}</span>\n                        </StyledLink>\n                    </MovieItem>\n                })}\n            </List>\n    )\n}\n\nMoviesList.propTypes = {\n    Movies: PropTypes.array.isRequired,\n  };\n\nexport default MoviesList","import { Pagination } from '@mui/material';\nimport styled from \"styled-components\";\n\nexport const PaginationWrapper = styled.div`\n   display:flex;\n   justify-content:center;\n`\n\nexport const PaginationPanel = styled(Pagination)`\n    margin-top:30px;\n    margin-bottom:30px;\n`","import { PaginationPanel, PaginationWrapper } from \"./Pagination.styled\";\n\nconst Pagination = ({ page, onChange, total_pages  }) => {\n    // const count = 100\n    return (\n        <PaginationWrapper>\n            <PaginationPanel\n                count={total_pages}\n                size=\"large\"\n                page={page}\n                variant=\"outlined\"\n                shape=\"rounded\"\n                onChange={onChange }\n            />\n        </PaginationWrapper>\n    )\n}\n\nexport default Pagination","import { useEffect, useState, Suspense } from \"react\"\nimport Pagination from \"components/Pagination/Pagination\"\nimport { toast } from \"react-toastify\";\n\nimport MoviesList from \"components/MoviesList/MoviesList\"\nimport { getTrendMovies } from \"services/movieApi\"\n\nconst customId = \"custom-id-yes\";\n\nconst Home = () => {\n    const [page, setPage] = useState(1);\n    const [total_pages, setTotal_pages] = useState(2)\n    const [responsePagination, setResponsePagination] = useState(false)\n    const [trendMovies, setTrendMovies] = useState([])\n    const [checkResponse, setCheckResponse] = useState(false)\n    const [title, setTitle] = useState(false)\n    console.log(trendMovies)    \n  \n\n    useEffect(() => {\n        async function getMovies() {\n            try {\n                const response = await getTrendMovies(page)\n                setTrendMovies(() => [...response.results])\n                setTotal_pages(response.total_pages)\n                // console.log(total_pages)\n                if (page === 1 ) {\n                toast.success(`We found total results ${response.total_results}`\n                , { toastId: customId, position: \"top-left\", });}\n                \n                if (trendMovies.length !== 0) {\n                    return setCheckResponse(true);                                 \n                  }\n                if (response.total_pages !== 0) {\n                    setResponsePagination(true)\n                }\n                if (response.total_pages === 0) {\n                    setResponsePagination(false)\n                }                \n            } catch (e) {\n                console.error(e)\n                if (!checkResponse){\n                    toast.error('No respoce from server'        \n                    ,        { toastId: customId });\n                    setTitle(true);\n                }\n          }    \n       }\n        getMovies()\n        return \n    },[page, total_pages, trendMovies.length, checkResponse]   \n    )\n       \n    \n    const handleChange = (e, p) => {\n        setPage(p);\n    };\n          \n    return (\n        <>\n            {responsePagination && <Pagination page={page} total_pages={total_pages} onChange={handleChange} />}\n            <MoviesList Movies={trendMovies}  />                       \n            {responsePagination && <Pagination page={page} total_pages={total_pages} onChange={handleChange} />}\n            <Suspense >\n            {title && <h1 style={{ textAlign: \"center\" }}>Sorry, try again later</h1>}\n            </Suspense>\n        </>        \n    )\n}\n\nexport default Home;","import axios from \"axios\";\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'f87210516a7f6fda7a5c975f08793382';\nconst setLanguage = 'en-US'\n\nexport const getTrendMovies = async (page = 1) => {\n  try { \n    const response = await axios.get(\n        `${BASE_URL}trending/movie/day`, {\n            params: {\n              api_key: API_KEY,\n              language: setLanguage,\n              page: page,\n            },\n          });   \n    console.log(response);\n    return response.data; \n  } catch (err) {\n    throw new Error(err.message);\n  }   \n} \n\nexport const getMovieDetails = async id => {\n  try { \n    const response = await axios.get(`${BASE_URL}movie/${id}`, {\n      params: {\n        api_key: API_KEY,\n        language: setLanguage,\n      },\n    });\n    return response.data;\n  } catch (err) {\n    throw new Error(err.message);\n  }  \n};\n  \nexport const getMovieCredits = async id => {\n  try { \n    const response = await axios.get(`${BASE_URL}movie/${id}/credits`, {\n      params: {\n        api_key: API_KEY,\n        language: setLanguage,\n      },\n    });\n    return response.data.cast;\n  } catch (err) {\n    throw new Error(err.message);\n  } \n};\n  \nexport const getMovieReviews = async id => {\n  try { \n    const response = await axios.get(`${BASE_URL}movie/${id}/reviews`, {\n      params: {\n        api_key: API_KEY,\n        language: setLanguage,\n      },\n    });\n    return response.data.results;\n  } catch (err) {\n    throw new Error(err.message);\n  }\n};\n  \nexport const getSearchMovie = async (query, page = 1) => {    \n  try { \n    const response = await axios.get(`${BASE_URL}search/movie`, {\n      params: {\n        api_key: API_KEY,\n        language: setLanguage,\n        query: query,\n        page: page,\n      },\n    });\n    console.log(response.data);    \n    return response.data;\n  } catch (err) {\n    throw new Error(err.message);\n  }\n};\n"],"names":["List","styled","MovieItem","StyledLink","Link","Poster","Movies","location","useLocation","length","map","movie","to","id","state","from","src","poster_path","alt","title","PaginationWrapper","PaginationPanel","Pagination","page","onChange","total_pages","count","size","variant","shape","customId","useState","setPage","setTotal_pages","responsePagination","setResponsePagination","trendMovies","setTrendMovies","checkResponse","setCheckResponse","setTitle","console","log","useEffect","getTrendMovies","response","results","toast","total_results","toastId","position","error","getMovies","handleChange","e","p","Suspense","style","textAlign","BASE_URL","API_KEY","setLanguage","axios","params","api_key","language","data","Error","message","getMovieDetails","getMovieCredits","cast","getMovieReviews","getSearchMovie","query"],"sourceRoot":""}