{"version":3,"file":"static/js/703.a5c123f9.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/Pagination/Pagination.styled.jsx","components/Pagination/Pagination.jsx","components/SearchBar/SearchBar.styled.jsx","components/SearchBar/SearchBar.jsx","pages/Movies/Movies.jsx","services/movieApi.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\"\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 280px);\n  justify-content: center;\n  gap: 20px;\n  padding: 20px 0;\n  /* background-color: #fff; */\n`\nexport const MovieItem = styled.li`\n    margin: 0 auto;\n    border: 1px solid lightgray;\n    width: 280px;\n  border-radius: 13px;\n  transition: box-shadow 250ms ease-in-out, border 150ms ease-in-out,transform 250ms ease-in-out ;\n  :hover{\n    box-shadow: 0px 2px 8px 0px rgba(0, 0, 0, 0.6);\n    transform: scale(1.05);\n  }\n    > a {\n        text-overflow: clip;\n    text-decoration: none;\n  }\n`\nexport const StyledLink = styled(Link)`\n    object-fit: cover;\n    overflow: hidden;\n    width: 280px;  \n    display: flex;\n    flex-direction:column;\n    border-radius: 13px;\n    color:black;\n    > span {\n    padding-left: 10px;\n    padding-bottom: 3px;\n  }    \n`\nexport const Poster = styled.img`\n    width: 280px;\n    height: 420px;\n    margin-bottom:10px;\n    object-fit: cover;\n    overflow: hidden;\n`\n","import PropTypes from 'prop-types';\nimport { List, Poster, StyledLink, MovieItem } from \"./MoviesList.styled\"\nimport {useLocation } from 'react-router-dom';\n\nconst MoviesList = ({ Movies }) => {\n    const location = useLocation();\n    return (\n            <List>\n                {Movies.length > 0 && Movies.map(movie => {\n                    return <MovieItem key={movie.id}>\n                        <StyledLink to={`/movies/${movie.id}`} state={{from:location}}>\n                            <Poster src={movie.poster_path === null\n                                ? 'https://dummyimage.com/400x600/7d7d7d/fff.jpg&text=image+not+found'\n                                : `https://image.tmdb.org/t/p/w400/${movie.poster_path}`}\n                                alt={movie.title} />\n                            <span> {movie.title}</span>\n                        </StyledLink>\n                    </MovieItem>\n                })}\n            </List>\n    )\n}\n\nMoviesList.propTypes = {\n    Movies: PropTypes.array.isRequired,\n  };\n\nexport default MoviesList","import { Pagination } from '@mui/material';\nimport styled from \"styled-components\";\n\nexport const PaginationWrapper = styled.div`\n   display:flex;\n   justify-content:center;\n`\n\nexport const PaginationPanel = styled(Pagination)`\n    margin-top:30px;\n    margin-bottom:30px;\n`","import { PaginationPanel, PaginationWrapper } from \"./Pagination.styled\";\n\nconst Pagination = ({ page, onChange, total_pages  }) => {\n    // const count = 100\n    return (\n        <PaginationWrapper>\n            <PaginationPanel\n                count={total_pages}\n                size=\"large\"\n                page={page}\n                variant=\"outlined\"\n                shape=\"rounded\"\n                onChange={onChange }\n            />\n        </PaginationWrapper>\n    )\n}\n\nexport default Pagination","import styled from 'styled-components';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  margin: 0 auto;\n  align-items: center;\n  width: 100%;\n  max-width: 300px;\n  background-color: #fff;\n  padding-left: 16px;\n  /* border: 2px solid rgb(200, 10, 10); */\n  border: 2px solid rgb(63, 81, 181);\n  border-radius: 26px;\n  overflow: hidden;\n`;\n\nexport const SearchBtn = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  :hover {\n    opacity: 1;\n  }\n`;\n\nexport const SearchInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { SearchBtn, SearchForm, SearchInput } from './SearchBar.styled';\nimport { FcSearch } from 'react-icons/fc';\nimport { toast } from 'react-hot-toast';\n\nexport const SearchBar = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n    const searchQuery = query.toLowerCase().trim();\n    if (searchQuery === '') {      \n      return  toast.success('It cannot be empty. Please try again.',\n      { iconTheme: {\n        primary: '#ecc92b',\n        secondary: '#FFFAEE' }, });\n      // {icon: 'ðŸ’¡' }  \n    }\n    onSubmit(searchQuery);\n    setQuery('');\n  };\n\n  return (\n    <SearchForm onSubmit={onFormSubmit}>      \n      <SearchInput\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies\"\n        value={query}\n        onChange={e => setQuery(e.target.value)}\n      />\n      <SearchBtn type=\"submit\">\n        <FcSearch size={30} />TEST\n      </SearchBtn>\n    </SearchForm>    \n  );\n};\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};","import { useEffect, useState } from \"react\"\nimport {useSearchParams } from \"react-router-dom\"\nimport {Suspense } from \"react\";\n\nimport { getSearchMovie } from \"services/movieApi\";\n\nimport { SearchBar } from \"components/SearchBar/SearchBar\";\nimport MoviesList from \"components/MoviesList/MoviesList\"\nimport Pagination from \"components/Pagination/Pagination\";\nimport { toast } from \"react-toastify\";\n\nconst Movies = () => {\n    const [page, setPage] = useState(1);\n    const [total_pages, setTotal_pages] = useState(null)\n    const [movies, setMovies] = useState([])\n    const [responseEmpty, setResponseEmpty] = useState(false)\n    const [responsePagination, setResponsePagination] = useState(false)\n    const [searchParams, setSearchParams] = useSearchParams()\n    const searchedMovie = searchParams.get(\"query\") ?? \"\"\n    \n    const updateQueryString = query => {\n        const nextParams = query !== '' ? { query } : {};\n        setSearchParams(nextParams);\n      };\n    \n    const customId = \"custom-id-yes\";\n\n    useEffect(() => {\n        if (!searchedMovie) return\n        async function getMoviesById() {\n            \n            try {\n                const response = await getSearchMovie(searchedMovie, page)\n                \n                console.log(response)\n                setMovies(response.results)\n                setTotal_pages(response.total_pages)\n                console.log(total_pages)\n                \n                if (page === 1) {\n                toast.success(`${response.total_results} matches found for your query`\n                , { toastId: customId, position: \"top-left\", })\n                }\n                if (response.total_pages === 0) {\n                    setResponseEmpty(true)\n                }\n                if (response.total_pages !== 0) {\n                    setResponsePagination(true)\n                }\n                if (response.total_pages === 0) {\n                    setResponsePagination(false)\n                }\n                \n            } catch (e) {\n                console.error(e)\n          }    \n       }\n       getMoviesById()\n       return \n    },[searchedMovie, page, total_pages])\n\n    const handleChange = (e, p) => {\n        setPage(p);\n    };\n\n    return (\n        <>   \n            <Suspense fallback={<div>Loading subpage...</div>}>\n                <SearchBar onSubmit={updateQueryString} />\n                {responsePagination && <Pagination page={page} total_pages={total_pages} onChange={handleChange} />}\n                <MoviesList Movies={movies}/>\n                {responseEmpty && <h1 style={{ textAlign: \"center\" }}>No results were found for {searchedMovie}</h1>}\n                {responsePagination && <Pagination page={page} total_pages={total_pages} onChange={handleChange} />}\n            </Suspense>\n        </>\n    )\n}\n\nexport default Movies","import axios from \"axios\";\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'f87210516a7f6fda7a5c975f08793382';\nconst setLanguage = 'en-US'\n\nexport const getTrendMovies = async (page = 1) => {\n  try { \n    const response = await axios.get(\n        `${BASE_URL}trending/movie/day`, {\n            params: {\n              api_key: API_KEY,\n              language: setLanguage,\n              page: page,\n            },\n          });   \n    console.log(response);\n    return response.data; \n  } catch (err) {\n    throw new Error(err.message);\n  }   \n} \n\nexport const getMovieDetails = async id => {\n  try { \n    const response = await axios.get(`${BASE_URL}movie/${id}`, {\n      params: {\n        api_key: API_KEY,\n        language: setLanguage,\n      },\n    });\n    return response.data;\n  } catch (err) {\n    throw new Error(err.message);\n  }  \n};\n  \nexport const getMovieCredits = async id => {\n  try { \n    const response = await axios.get(`${BASE_URL}movie/${id}/credits`, {\n      params: {\n        api_key: API_KEY,\n        language: setLanguage,\n      },\n    });\n    return response.data.cast;\n  } catch (err) {\n    throw new Error(err.message);\n  } \n};\n  \nexport const getMovieReviews = async id => {\n  try { \n    const response = await axios.get(`${BASE_URL}movie/${id}/reviews`, {\n      params: {\n        api_key: API_KEY,\n        language: setLanguage,\n      },\n    });\n    return response.data.results;\n  } catch (err) {\n    throw new Error(err.message);\n  }\n};\n  \nexport const getSearchMovie = async (query, page = 1) => {    \n  try { \n    const response = await axios.get(`${BASE_URL}search/movie`, {\n      params: {\n        api_key: API_KEY,\n        language: setLanguage,\n        query: query,\n        page: page,\n      },\n    });\n    console.log(response.data);    \n    return response.data;\n  } catch (err) {\n    throw new Error(err.message);\n  }\n};\n"],"names":["List","styled","MovieItem","StyledLink","Link","Poster","Movies","location","useLocation","length","map","movie","to","id","state","from","src","poster_path","alt","title","PaginationWrapper","PaginationPanel","Pagination","page","onChange","total_pages","count","size","variant","shape","SearchForm","SearchBtn","SearchInput","SearchBar","onSubmit","useState","query","setQuery","e","preventDefault","searchQuery","toLowerCase","trim","toast","iconTheme","primary","secondary","type","autoComplete","autoFocus","placeholder","value","target","setPage","setTotal_pages","movies","setMovies","responseEmpty","setResponseEmpty","responsePagination","setResponsePagination","useSearchParams","searchParams","setSearchParams","searchedMovie","get","customId","useEffect","getSearchMovie","response","console","log","results","total_results","toastId","position","error","getMoviesById","handleChange","p","Suspense","fallback","MoviesList","style","textAlign","BASE_URL","API_KEY","setLanguage","getTrendMovies","axios","params","api_key","language","data","Error","message","getMovieDetails","getMovieCredits","cast","getMovieReviews"],"sourceRoot":""}